/*
 * Copyright 2024 Peter Hirzel
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package swiss.opentransportdata.ojp.adapter.model.common.response;

import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.Schema.RequiredMode;
import lombok.Builder;
import lombok.NonNull;
import lombok.Value;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import swiss.opentransportdata.ojp.adapter.model.ModelDoc;
import swiss.opentransportdata.ojp.adapter.model.PublicLinks;

/**
 * @see <a href="https://tools.ietf.org/html/rfc7807">RFC7807</a>
 * @see <a href="https://opensource.zalando.com/restful-api-guidelines/#176">MUST use problem JSON [176]</a>
 * @see <a href="https://opensource.zalando.com/problem/schema.yaml">Problem opensource schema</a>
 * @see <a href="https://opensource.zalando.com/restful-api-guidelines/#234">MUST only use durable and immutable remote references [234]</a>
 * @see org.springframework.http.ProblemDetail {@code ProblemDetail} from Spring as a possible replacement
 */
@Schema(name = "Problem", description = "Zalando like error-object if not HttpStatus 2xx (see " + ModelDoc.RFC7807 + "). Check for: " + HttpHeaders.CONTENT_TYPE + "="
    + MediaType.APPLICATION_PROBLEM_JSON_VALUE)
@Builder
@Value
@JsonPropertyOrder({"status", "title", "detail", "instance", "type", Problem.TRACE_ID_FIELD_NAME})
public class Problem implements JsonResponse {

    public static final String TRACE_ID_FIELD_NAME = "traceId";

    @Schema(description = "The HTTP status code generated by the origin server for this occurrence of the problem.",
        requiredMode = RequiredMode.REQUIRED,
        minimum = "100", maximum = "600", exclusiveMaximum = true,
        example = "500")
    @NonNull
    Integer status;

    @Schema(description = "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized).",
        requiredMode = RequiredMode.REQUIRED,
        example = "Service Unavailable")
    @NonNull
    String title;

    // example: Connection to database timed out
    @Schema(description = "A human readable explanation specific to this occurrence of the problem.",
        requiredMode = RequiredMode.REQUIRED)
    @NonNull
    String detail;

    // format: uri
    @Schema(description = "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
        example = "/v3/places/{8507000}")
    String instance;

    // format:URI, see "https://zalando.github.io/problem/constraint-violation"
    @Schema(description = "An absolute URI that identifies the problem type. When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).",
        requiredMode = RequiredMode.REQUIRED, defaultValue = PublicLinks.DEV_MANUAL_PROBLEM)
    @NonNull
    String type;

    /**
     * {@code trace-id} that help us for support by identifying the case in the logs and monitoring tool (for e.g. Instana).
     *
     * @see #TRACE_ID_FIELD_NAME
     */
    @Schema(description = "The `trace-id` according to the [W3C tracing standard](https://www.w3.org/TR/trace-context/#traceparent-header). (Might be useful for support-cases with the operations teams.)")
    String traceId;
}
